sudo: required
services:
  - docker
language: python
env:
  - distro=centos7 init=/usr/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" PKG=yum
  - distro=ubuntu1604 init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" PKG=apt-get
  - distro=ubuntu1404 init=/sbin/init run_opts="" PKG=apt-get
  - distro=debian8 init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" PKG=apt-get

matrix:
  allow_failures:
    - env: distro=centos6 init=/sbin/init run_opts="" PKG=yum

before_install:
  # Pull the image from Docker Hub for the OS under test.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  # Create a random file to store the container ID.
  - container_id=$(mktemp)

  # Run container detached, with our role mounted inside.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/prometheus:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Test the Ansible role.
  # Check the role/playbook's syntax.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook /etc/ansible/roles/prometheus/tests/test.yml
    --syntax-check
  # Run the role/playbook with ansible-playbook.
  - >
    docker exec --tty "$(cat ${container_id})" env TERM=xterm
    ansible-playbook /etc/ansible/roles/prometheus/tests/test.yml
  # Run the role/playbook again, checking to make sure it's idempotent.
  - idempotence=$(mktemp)
  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook /etc/ansible/roles/prometheus/tests/test.yml
    | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # install curl if not installed
  - docker exec -e TERM=xterm -e PKG=${PKG} --tty "$(cat ${container_id})" bash -c 'which curl || ($PKG update && $PKG install curl -y)'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm curl http://localhost:9090'

notifications:
  # Notify Ansible Galaxy when a role builds successfully.
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
